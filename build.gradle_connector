plugins {
    id 'fabric-loom' version '1.9-SNAPSHOT'
    id 'maven-publish'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id "com.modrinth.minotaur" version "2.+"
}

import com.modrinth.minotaur.dependencies.ModDependency

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

base {
    archivesName = project.modNameConnector
}
version = project.modVersion
group = project.mavenGroup

loom {
 	accessWidenerPath = file("./src/main/resources/walljump.aw")
}

repositories {
    jcenter()
    maven { url 'https://libs.azuredoom.com:4443/mods' }
	maven { url "https://maven.terraformersmc.com/" }
	maven { url "https://maven.terraformersmc.com/releases" } // modmenu
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraftVersion}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loaderVersion}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabricVersion}"
    implementation "org.aeonbits.owner:owner:${project.ownerVersion}"
    include "org.aeonbits.owner:owner:${project.ownerVersion}" 
    modImplementation "maven.modrinth:keybind-fix:1.0.0"
    include "maven.modrinth:keybind-fix:1.0.0"
    modImplementation("net.fabricmc:fabric-language-kotlin:1.10.10+kotlin.1.9.10")
    include "net.fabricmc:fabric-language-kotlin:1.10.10+kotlin.1.9.10"
    modImplementation "mod.azure.azurelib:azurelib-fabric-${project.minecraftVersion}:${project.azurelibVersion}"
    include "mod.azure.azurelib:azurelib-fabric-${project.minecraftVersion}:${project.azurelibVersion}"
	modCompileOnly "com.terraformersmc:modmenu:${project.modmenuVersion}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
    it.options.encoding = "UTF-8"
}

jar {
    from "LICENSE"
}

if (file('key.properties').exists()) {
    curseforge {

    def curseProp = new Properties()
    File secretPropsFile = file("key.properties")
    curseProp.load(secretPropsFile.newInputStream())

    project {
        apiKey = curseProp.getProperty('curseKey')
        id = "${project.curseID}"
        releaseType = "release"
        changelogType = 'text'
        changelog = file('changelog.txt')
		addGameVersion("1.20.2")
        addGameVersion("Forge")
        addGameVersion("Java 17")

        relations {
            	requiredDependency 'forgified-fabric-api'  
            	requiredDependency 'sinytra-connector'  
        }
        mainArtifact(remapJar)

        afterEvaluate {
            uploadTask.dependsOn("remapJar")
        }
    }
    options {
        forgeGradleIntegration = false
    }
   }
}

if (file('key.properties').exists()) {
	modrinth {
		def modrinthProp = new Properties()
		File secretPropsFile = file("key.properties")
		modrinthProp.load(secretPropsFile.newInputStream())
		
		token = modrinthProp.getProperty('modrinthKey')
		projectId = project.modrinthID
		versionNumber = project.modVersion 
		uploadFile = remapJar 
		changelog = rootProject.file("changelog.txt").text
		gameVersions = ['1.20.2']
		versionType = "release"
		loaders = ['forge']
		dependencies { 
        	required.project "connector"
        	required.project "forgified-fabric-api"
   		}
	}
}